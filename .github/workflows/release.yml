name: Dr Header Release Task

on: 
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
        max-parallel: 4
        matrix:
          python-version: [3.7]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install -r requirements_dev.txt
            
      - name: Test with Nosetests
        run: python -m nose --with-xunit --xunit-file=${{ matrix.python-version }}.results.xml

      - name: Flake8 styles
        run: python -m flake8 drheader

      - name: Bandit security scan
        run: python -m bandit -r ./drheader

      - name: Safety dependency scan
        run: python -m safety check

      - name: Make Wheel
        run: |
          python3 setup.py sdist bdist_wheel
          
      - name: Dump build info for release
        run: |
           git log --pretty=oneline > changelog
           python3 setup.py --version > version     
           
      - name: Get bumpversion
        run: echo ::set-env name=VERSION::$(grep -i 'current_version = ' setup.cfg |  tr -d 'current_version = ')  

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION}}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
        
      - name: Upload Wheel
        id: upload_wheel
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./dist/drheader-${{ env.VERSION }}-py2.py3-none-any.whl
          asset_name: DrHeader Wheel
          asset_content_type: application/x-python-wheel
      
      - name: Upload Changelog
        id: upload_changelog
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: changelog
          asset_name: DrHeader changelog
          asset_content_type: text/plain

      - name: Publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*
