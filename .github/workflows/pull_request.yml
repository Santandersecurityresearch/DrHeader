name: Scan pull request

on:
  pull_request:
    branches:
      - dev
      - master

jobs:
  scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached Poetry installation
        id: cached-poetry-installation
        uses: actions/cache@v4
        with:
          path: |
            ~/.local
            ~/.config/pypoetry
          key: poetry-${{ vars.POETRY_VERSION }}

      - name: Install Poetry if not cached installation
        if: steps.cached-poetry-installation.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: ${{ vars.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Verify lock file
        run: poetry check --no-interaction

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies if not cached venv
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Load cached tox
        uses: actions/cache@v4
        with:
          path: .tox
          key: tox-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Run unit tests
        env:
          version: ${{ matrix.python-version }}
        run: poetry run tox run -e py$version -- -- --junitxml $version.results.xml

      - name: Upload test results
        uses: actions/upload-artifact@master
        with:
          name: Results - ${{ matrix.python-version }}
          path: ${{ matrix.python-version }}.results.xml

      - name: Run lint scan
        run: poetry run tox run -e lint

      - name: Run SAST scan
        run: poetry run tox run -e sast
